Stream.of(
Block.makeCuboidShape(-1.827272727272728, -16, 1.8272727272727263, 18.172727272727272, -15, 13.827272727272728),
Block.makeCuboidShape(5.172727272727271, -16, 18.827272727272728, 11.172727272727272, 32, 19.827272727272728),
Block.makeCuboidShape(5.172727272727271, 31, 17.827272727272728, 11.172727272727272, 32, 18.827272727272728),
Block.makeCuboidShape(5.172727272727271, -16, 17.827272727272728, 11.172727272727272, -15, 18.827272727272728),
Block.makeCuboidShape(5.172727272727271, -16, -4.172727272727273, 11.172727272727272, 32, -3.172727272727273),
Block.makeCuboidShape(-2.827272727272728, 31, 4.827272727272726, -1.827272727272728, 32, 10.827272727272728),
Block.makeCuboidShape(-2.827272727272728, -16, 4.827272727272726, -1.827272727272728, -15.5, 10.827272727272728),
Block.makeCuboidShape(19.172727272727272, -16, 4.827272727272726, 20.172727272727272, 32, 10.827272727272728),
Block.makeCuboidShape(18.172727272727272, 31, 4.827272727272726, 19.172727272727272, 32, 10.827272727272728),
Block.makeCuboidShape(18.172727272727272, -16, 4.827272727272726, 19.172727272727272, -15, 10.827272727272728),
Block.makeCuboidShape(2.172727272727271, -16, 17.827272727272728, 5.172727272727271, 32, 18.827272727272728),
Block.makeCuboidShape(11.172727272727272, -16, -3.172727272727273, 14.172727272727272, 32, -2.172727272727273),
Block.makeCuboidShape(11.172727272727272, -16, 17.827272727272728, 14.172727272727272, 32, 18.827272727272728),
Block.makeCuboidShape(2.172727272727271, -16, -3.172727272727273, 5.172727272727271, 32, -2.172727272727273),
Block.makeCuboidShape(-2.827272727272728, -16, 1.8272727272727263, -1.827272727272728, -15.5, 4.827272727272726),
Block.makeCuboidShape(-2.827272727272728, 31, 1.8272727272727263, -1.827272727272728, 32, 4.827272727272726),
Block.makeCuboidShape(18.172727272727272, -16, 10.827272727272728, 19.172727272727272, 32, 13.827272727272728),
Block.makeCuboidShape(-2.827272727272728, -16, 10.827272727272728, -1.827272727272728, -15.5, 13.827272727272728),
Block.makeCuboidShape(-2.827272727272728, 31, 10.827272727272728, -1.827272727272728, 32, 13.827272727272728),
Block.makeCuboidShape(18.172727272727272, -16, 1.8272727272727263, 19.172727272727272, 32, 4.827272727272726),
Block.makeCuboidShape(1.172727272727271, -16, 16.827272727272728, 2.172727272727271, 32, 17.827272727272728),
Block.makeCuboidShape(2.172727272727271, 31, 16.827272727272728, 14.172727272727272, 32, 17.827272727272728),
Block.makeCuboidShape(2.172727272727271, -16, 16.827272727272728, 14.172727272727272, -15, 17.827272727272728),
Block.makeCuboidShape(1.172727272727271, 31, 15.827272727272728, 15.172727272727272, 32, 16.827272727272728),
Block.makeCuboidShape(1.172727272727271, -16, 15.827272727272728, 15.172727272727272, -15, 16.827272727272728),
Block.makeCuboidShape(0.17272727272727106, 31, 14.827272727272728, 16.172727272727272, 32, 15.827272727272728),
Block.makeCuboidShape(0.17272727272727106, -16, 14.827272727272728, 16.172727272727272, -15, 15.827272727272728),
Block.makeCuboidShape(-0.827272727272728, 31, 13.827272727272728, 17.172727272727272, 32, 14.827272727272728),
Block.makeCuboidShape(-0.827272727272728, -16, 13.827272727272728, 17.172727272727272, -15, 14.827272727272728),
Block.makeCuboidShape(-0.827272727272728, 31, 0.8272727272727263, 17.172727272727272, 32, 1.8272727272727263),
Block.makeCuboidShape(-0.827272727272728, -16, 0.8272727272727263, 17.172727272727272, -15, 1.8272727272727263),
Block.makeCuboidShape(0.17272727272727106, 31, -0.17272727272727284, 16.172727272727272, 32, 0.8272727272727263),
Block.makeCuboidShape(0.17272727272727106, -16, -0.17272727272727284, 16.172727272727272, -15, 0.8272727272727263),
Block.makeCuboidShape(1.172727272727271, 31, -1.1727272727272728, 15.172727272727272, 32, -0.17272727272727284),
Block.makeCuboidShape(1.172727272727271, -16, -1.1727272727272728, 15.172727272727272, -15, -0.17272727272727284),
Block.makeCuboidShape(2.172727272727271, 31, -2.172727272727273, 14.172727272727272, 32, -1.1727272727272728),
Block.makeCuboidShape(2.172727272727271, -16, -2.172727272727273, 14.172727272727272, -15, -1.1727272727272728),
Block.makeCuboidShape(5.172727272727271, 31, -3.172727272727273, 11.172727272727272, 32, -2.172727272727273),
Block.makeCuboidShape(5.172727272727271, -16, -3.172727272727273, 11.172727272727272, -15, -2.172727272727273),
Block.makeCuboidShape(14.172727272727272, -16, -2.172727272727273, 15.172727272727272, 32, -1.1727272727272728),
Block.makeCuboidShape(17.172727272727272, -16, 13.827272727272728, 18.172727272727272, 32, 14.827272727272728),
Block.makeCuboidShape(-1.827272727272728, -16, 0.8272727272727263, -0.827272727272728, 32, 1.8272727272727263),
Block.makeCuboidShape(0.17272727272727106, -16, 15.827272727272728, 1.172727272727271, 32, 16.827272727272728),
Block.makeCuboidShape(15.172727272727272, -16, -1.1727272727272728, 16.172727272727272, 32, -0.17272727272727284),
Block.makeCuboidShape(16.172727272727272, -16, 14.827272727272728, 17.172727272727272, 32, 15.827272727272728),
Block.makeCuboidShape(-0.827272727272728, -16, -0.17272727272727284, 0.17272727272727106, 32, 0.8272727272727263),
Block.makeCuboidShape(-0.827272727272728, -16, 14.827272727272728, 0.17272727272727106, 32, 15.827272727272728),
Block.makeCuboidShape(16.172727272727272, -16, -0.17272727272727284, 17.172727272727272, 32, 0.8272727272727263),
Block.makeCuboidShape(15.172727272727272, -16, 15.827272727272728, 16.172727272727272, 32, 16.827272727272728),
Block.makeCuboidShape(0.17272727272727106, -16, -1.1727272727272728, 1.172727272727271, 32, -0.17272727272727284),
Block.makeCuboidShape(-1.827272727272728, -16, 13.827272727272728, -0.827272727272728, 32, 14.827272727272728),
Block.makeCuboidShape(17.172727272727272, -16, 0.8272727272727263, 18.172727272727272, 32, 1.8272727272727263),
Block.makeCuboidShape(14.172727272727272, -16, 16.827272727272728, 15.172727272727272, 32, 17.827272727272728),
Block.makeCuboidShape(1.172727272727271, -16, -2.172727272727273, 2.172727272727271, 32, -1.1727272727272728),
Block.makeCuboidShape(-1.827272727272728, 31, 1.8272727272727263, 18.172727272727272, 32, 13.827272727272728)
).reduce((v1, v2) -> {return VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR);});